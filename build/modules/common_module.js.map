{"version":3,"sources":["../index.js"],"names":[],"mappings":"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","file":"common_module.js","sourcesContent":["    import \"ng-harmony/ng-harmony-evented\";\n    import { Mixin } from \"ng-harmony/ng-harmony-annotate\";\n\n    class Base {\n        constructor (...args) {\n            super(...args);\n        }\n        initialize (...args) {\n\n            this.$scope.model = {};\n            this.transform = [{\n                descriptor: \"Name\", //of DataService without the DataService-suffix\n                init: [\n                    // i is the id ... 0 - length-1 ... or -1 for all datasets\n                    //{ i: 0, prop: \"loading\", val: false },\n                    //{ i: -1, prop: \"selected\", val: (db, id) => { return id is 0; } }\n                ],\n                digest: [\n                    //{ i: -1, prop: \"selected\", val: (db, id) -> (db.store.find((el, i, arr) => { return el.id is id; }).special is this.$scope.someConditional }\n                ]\n            }];\n            this.$scope.state = {\n                loading: true,\n                selected: null,\n                busy: null,\n                error: null\n            };\n            for (let [i, dataset] of this.transform.entries()) {\n                let Service = this[`${dataset.descriptor[0].toUpperCase()}${dataset.descriptor.substr(1)}DataService`];\n                for (let [i, rule] of dataset.init.entries()) {\n                    Service.aspects(() => { Service.set(rule) }, true);\n                }\n                for (let [i, rule] of dataset.digest.entries()) {\n                    Service.aspects(() => { Service.set(rule) });\n                }\n            }\n            for (let [key, Service] of this.constructor.iterate(this)) {\n                if (!/DataService/.test(key)) { continue; }\n                descriptor = key.remove(\"DataService\").toLowerCase();\n                Service.subscribe(this._transform.bind(this, descriptor));\n                if (Service.db && Service.db.ready === true) { Service.digest(); }\n            }\n            for (let [k, v] of this.constructor.iterate(this.$scope.state)) {\n                let className = this.$element.className.split(/\\s+/);\n                let hasClass = !!~className.indexOf(k);\n                if (v === true && !hasClass) { this.$element.addClass(k); }\n                ((_k, _v, _hasClass, _className) => {\n                    this.$scope.$watch(`state.${_k}`, (after, before) => {\n                        if (after === true && !_hasClass) { this.$element.className += ` ${_k}`; }\n                        else if (_hasClass) { this.$element.className = _className.filter((el, i, arr) => { return el !== _k }).join(\" \"); }\n                        if (before === after || ((before === undefined || before === null) && (after === undefined || after === null))) { return null; }\n                        this.$scope.$emit(`state.${_k}`, {\n                            obj: this.toString(),\n                            val: after\n                        });\n                    })\n                })(k, v, hasClass, className);\n            }\n        }\n        _transform (descriptor, db) {\n            if (this.$scope.model[descriptor] === undefined || this.$scope.model[descriptor] === null) {\n                this.$scope.model[descriptor] = this[descriptor[1].toUpperCase() + descriptor.substring(1) + \"DataService\"].db.store;\n            }\n            if (this.$scope.model.current === undefined || this.$scope.model.current === null) {\n                this.$scope.model.current = {};\n            }\n            this.$scope.model.current[descriptor] = db.current || null;\n            if (this.$scope.model[descriptor] === undefined || this.$scope.model[descriptor] === null || this.$scope.model[descriptor].length === 0) {\n                console.warn(`${this.toString()}::_transform: the dataset of ${descriptor} was empty`)\n                return false;\n            } else { return true; }\n        }\n    }\n\n    @Mixin([Base])\n    export default class Component extends EventedController {\n        constructor (...args) {\n            super(...args);\n            this.initialize(...args);\n        }\n    }\n\n    @Mixin([Base])\n    export class RouteComponent extends RouteController {\n        constructor (...args) {\n            super(...args);\n            this.initialize(...args);\n        }\n    }\n\n    @Mixin([Base])\n    export class StatefulComponent extends StatefulController {\n        constructor (...args) {\n            super(...args);\n            this.initialize(...args);\n        }\n    }"]}